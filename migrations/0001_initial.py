# Generated by Django 2.1 on 2018-12-07 13:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('Kommentare', '0002_auto_20181129_1736'),
    ]

    operations = [
        migrations.CreateModel(
            name='ArtErfolg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('slug', models.SlugField(blank=True, max_length=99)),
                ('wichtung', models.PositiveSmallIntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Erfolgsart',
                'verbose_name_plural': 'Arten von Erfolgen',
            },
        ),
        migrations.CreateModel(
            name='ArtTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('slug', models.SlugField(blank=True, max_length=99)),
                ('plural', models.CharField(blank=True, default='', max_length=99)),
            ],
            options={
                'verbose_name': 'Art des Tags',
                'verbose_name_plural': 'Arten von Tags',
            },
        ),
        migrations.CreateModel(
            name='ArtTeilnahme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('slug', models.SlugField(blank=True, max_length=99)),
            ],
            options={
                'verbose_name': 'Teilnahmeart',
                'verbose_name_plural': 'Arten von Teilnahmen',
            },
        ),
        migrations.CreateModel(
            name='ArtVeranstaltung',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('slug', models.SlugField(blank=True, max_length=99)),
                ('teilnahmearten', models.ManyToManyField(blank=True, related_name='veranstaltungsarten', to='Wettbewerbe.ArtTeilnahme')),
            ],
            options={
                'verbose_name': 'Art von Veranstaltungen',
                'verbose_name_plural': 'Arten der Veranstaltungen',
            },
        ),
        migrations.CreateModel(
            name='Erfolg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('nur_name', models.CharField(blank=True, max_length=99)),
                ('zusatz', models.CharField(blank=True, default='', max_length=99)),
                ('art', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='Wettbewerbe.ArtErfolg')),
            ],
            options={
                'verbose_name': 'Konkreter Erfolg',
                'verbose_name_plural': 'Konkrete Erfolge',
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('nutzer', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='person', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Person',
                'verbose_name_plural': 'Personen',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('slug', models.SlugField(blank=True, max_length=99)),
                ('art', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='tags', to='Wettbewerbe.ArtTag')),
                ('kommentarliste', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='objekt_Tag', to='Kommentare.Liste')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
            },
        ),
        migrations.CreateModel(
            name='Teilnahme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('nur_name', models.CharField(blank=True, max_length=99)),
                ('ob_weitergekommen', models.BooleanField(default=False)),
                ('art', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='Wettbewerbe.ArtTeilnahme')),
                ('person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='teilnahmen', to='Wettbewerbe.Person')),
            ],
            options={
                'verbose_name': 'Konkrete Teilnahme',
                'verbose_name_plural': 'Konkrete Teilnahmen',
            },
        ),
        migrations.CreateModel(
            name='Veranstaltung',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('slug', models.SlugField(blank=True, max_length=99)),
                ('beschreibung', models.TextField(blank=True, default='')),
                ('datum_anfang', models.DateField(blank=True, null=True)),
                ('datum_ende', models.DateField(blank=True, null=True)),
                ('art', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='Wettbewerbe.ArtVeranstaltung')),
                ('kommentarliste', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='objekt_Veranstaltung', to='Kommentare.Liste')),
                ('tags', models.ManyToManyField(blank=True, related_name='veranstaltungen', to='Wettbewerbe.Tag')),
            ],
            options={
                'verbose_name_plural': 'Veranstaltungen',
            },
        ),
        migrations.CreateModel(
            name='WettbewerbKonkret',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('beschreibung', models.TextField(blank=True, default='')),
                ('jahrgang', models.PositiveSmallIntegerField()),
                ('datum', models.CharField(blank=True, default='', max_length=255)),
                ('kommentarliste', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='objekt_WettbewerbKonkret', to='Kommentare.Liste')),
                ('veranstaltung', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='wettbewerbe', to='Wettbewerbe.Veranstaltung')),
            ],
            options={
                'verbose_name': 'Konkreter Wettbewerb',
                'verbose_name_plural': 'Wettbewerbe Konkret',
            },
        ),
        migrations.CreateModel(
            name='WettbewerbPrinzipiell',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('slug', models.SlugField(blank=True, max_length=99)),
                ('slug_prefix', models.SlugField()),
                ('datum', models.CharField(blank=True, default='', max_length=255)),
                ('wichtung', models.PositiveSmallIntegerField(default=0)),
                ('erfolgsarten', models.ManyToManyField(blank=True, related_name='wettbewerbsarten', to='Wettbewerbe.ArtErfolg')),
                ('fortsetzung', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vorheriger', to='Wettbewerbe.WettbewerbPrinzipiell')),
                ('kommentarliste', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='objekt_WettbewerbPrinzipiell', to='Kommentare.Liste')),
                ('tags', models.ManyToManyField(blank=True, related_name='wettbewerbe', to='Wettbewerbe.Tag')),
            ],
            options={
                'verbose_name': 'Generischer Wettbewerb',
                'verbose_name_plural': 'Wettbewerbe Generisch',
            },
        ),
        migrations.AddField(
            model_name='wettbewerbkonkret',
            name='wettbewerb',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jahrgaenge', to='Wettbewerbe.WettbewerbPrinzipiell'),
        ),
        migrations.AddField(
            model_name='teilnahme',
            name='veranstaltung',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teilnahmen', to='Wettbewerbe.Veranstaltung'),
        ),
        migrations.AddField(
            model_name='person',
            name='veranstaltungen',
            field=models.ManyToManyField(related_name='personen', through='Wettbewerbe.Teilnahme', to='Wettbewerbe.Veranstaltung'),
        ),
        migrations.AddField(
            model_name='person',
            name='wettbewerbe',
            field=models.ManyToManyField(related_name='personen', through='Wettbewerbe.Erfolg', to='Wettbewerbe.WettbewerbKonkret'),
        ),
        migrations.AddField(
            model_name='erfolg',
            name='person',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='erfolge', to='Wettbewerbe.Person'),
        ),
        migrations.AddField(
            model_name='erfolg',
            name='wettbewerb',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='erfolge', to='Wettbewerbe.WettbewerbKonkret'),
        ),
        migrations.AlterUniqueTogether(
            name='wettbewerbprinzipiell',
            unique_together={('slug', 'slug_prefix')},
        ),
        migrations.AlterUniqueTogether(
            name='teilnahme',
            unique_together={('person', 'veranstaltung')},
        ),
        migrations.AlterUniqueTogether(
            name='erfolg',
            unique_together={('person', 'wettbewerb')},
        ),
    ]
